####
# Requires a file named edge-deployment.json in the repo using the template.
# See sample manifest: DeployEdgeManifest.json
#
# uses: evoy-as/.github/.github/actions/iot-edge-deploy-manifest@main
####
name: IotEdgeManifestDeploy
description: "Deploy IoT Edge manifest"
inputs:
  azure_rbac_credentials:
    description: service principal in json format
    required: true
    type: string
  sem_ver:
    required: true
    type: string
  image:
    description: Image url
    required: true
    type: string
  edge_deployment_fileName:
    required: false
    type: string
    default: edge-deployment.json
  target_condition:
    description: IoT Hub target device condition
    required: true
    type: string
    default: tags.notset='true'
  priority:
    description: IoT Hub deployment priority
    required: false
    type: string
    default: 3
  deployment_name_prefix:
    description: prefix to use for deployment name
    required: false
    type: string
    default: ci
  deployment_name:
    required: false
    type: string
    default: ${{ github.event.repository.name }}
runs:
  using: "composite"
  steps:
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure_rbac_credentials }}
    - name: "Set image url in manifest file"
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["edge-deployment.json"]'
      env:
        IMAGE: ${{ inputs.image }}
    - name: Show edge deployment
      shell: bash
      run: |
        cat edge-deployment.json
    - id: deployment-details
      run: |
        branch_name=${{ github.ref }}
        echo "Branch: $branch_name"
        build_id="${{ inputs.sem_ver }}"
        deployment_name="${{inputs.deployment_name_prefix}}-${{ inputs.deployment_name }}"

        echo "Install azure-iot extension"
        az config set extension.use_dynamic_install=yes_without_prompt
        az extension add --name azure-iot

        build_id=$(echo $build_id | sed 's/\./_/g')

        if [ "$branch_name" == "refs/heads/main" ]; then
            env="prod"
        else 
            env="dev"
        fi 
        iot_hub_name=$(az iot hub list --query "[?starts_with(name,'iot-$env-evoy-')].name" --output tsv)
        deployment_name="$deployment_name-$build_id"

        echo "iot-hub-name=$iot_hub_name" >> "$GITHUB_OUTPUT"
        echo "deployment-name=$deployment_name" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: "Deploy edge manifest to IoT Hub"
      if: ${{ inputs.image != null }}
      uses: "evoy-as/.github/.github/actions/iot-edge-deploy@main"
      with:
        azure-credentials: ${{ inputs.azure_rbac_credentials }}
        content: edge-deployment.json
        deployment-name: ${{ steps.deployment-details.outputs.deployment-name }}
        layered: true
        iot-hub-name: ${{ steps.deployment-details.outputs.iot-hub-name }}
        priority: ${{ inputs.priority }}
        target-condition: ${{ inputs.target_condition }}
    - name: "Deploy skipped due to existing tag ${{ inputs.sem_ver  }}"
      if: ${{ inputs.image == null }}
      shell: bash
      run: |
        echo "Deploy skipped due to existing tag ${{ inputs.sem_ver  }}"
